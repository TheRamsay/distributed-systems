2024-08-01 18:02:42,613{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin ./target/debug/echo --node-count 1 --time-limit 10
2024-08-01 18:02:42,640{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x157002b7"
         "maelstrom.db$db$reify__16142@157002b7"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1a0b51e7" "2024-08-01T18:02:42.603+02:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x6f96d39f"
         "maelstrom.net$jepsen_net$reify__15251@6f96d39f"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x5f49c09d"
         "maelstrom.workload.echo$client$reify__16863@5f49c09d"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0xc197f46"
         "java.util.concurrent.CyclicBarrier@c197f46"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x4c5d934b"
         "jepsen.checker$compose$reify__11881@4c5d934b"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "./target/debug/echo"
  "--node-count"
  "1"
  "--time-limit"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@150eab74"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@4d2dc60"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./target/debug/echo"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x44f433db"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@44f433db"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x38388639"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@38388639"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x5aeaee3"
                                                    "maelstrom.workload.echo$workload$fn__16882@5aeaee3"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x53a20aab"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x362d91ef"
         "maelstrom.net$jepsen_os$reify__15254@362d91ef"]
 :time-limit 10
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-08-01 18:02:43,775{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-08-01 18:02:43,776{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-08-01 18:02:43,777{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-08-01 18:02:43,778{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-08-01 18:02:43,782{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-08-01 18:02:43,782{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./target/debug/echo []
2024-08-01 18:02:43,793{GMT}	WARN	[n0 stdout] maelstrom.process: Error!
java.lang.UnsupportedOperationException: nth not supported on this type: Character
	at clojure.lang.RT.nthFrom(RT.java:992)
	at clojure.lang.RT.nth(RT.java:940)
	at maelstrom.process$keywordize_keys_1$fn__15850.invoke(process.clj:30)
	at clojure.core.protocols$fn__8247.invokeStatic(protocols.clj:153)
	at clojure.core.protocols$fn__8247.invoke(protocols.clj:124)
	at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
	at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
	at clojure.core.protocols$fn__8226.invokeStatic(protocols.clj:75)
	at clojure.core.protocols$fn__8226.invoke(protocols.clj:75)
	at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
	at clojure.core$reduce.invokeStatic(core.clj:6886)
	at clojure.core$reduce.invoke(core.clj:6868)
	at maelstrom.process$keywordize_keys_1.invokeStatic(process.clj:30)
	at maelstrom.process$keywordize_keys_1.invoke(process.clj:26)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:54)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:02:53,788{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-08-01 18:02:55,790{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-08-01 18:02:55,793{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Expected node n0 to respond to an init message, but node did not respond.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.db$db$reify__16142.setup_BANG_(db.clj:63)
	at jepsen.db$fn__8729$G__8723__8733.invoke(db.clj:12)
	at jepsen.db$fn__8729$G__8722__8738.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:98)
	at maelstrom.client$recv_BANG_.invoke(client.clj:81)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:123)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:119)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:149)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:140)
	at maelstrom.db$db$reify__16142.setup_BANG_(db.clj:48)
	... 27 common frames omitted
