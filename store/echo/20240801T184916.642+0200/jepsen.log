2024-08-01 18:49:16,666{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin ./target/debug/echo --node-count 1 --time-limit 10 --log-stderr
2024-08-01 18:49:16,701{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x157002b7"
         "maelstrom.db$db$reify__16142@157002b7"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1a0b51e7" "2024-08-01T18:49:16.642+02:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x6f96d39f"
         "maelstrom.net$jepsen_net$reify__15251@6f96d39f"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x5f49c09d"
         "maelstrom.workload.echo$client$reify__16863@5f49c09d"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0xc197f46"
         "java.util.concurrent.CyclicBarrier@c197f46"]
 :log-stderr true
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x4c5d934b"
         "jepsen.checker$compose$reify__11881@4c5d934b"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "./target/debug/echo"
  "--node-count"
  "1"
  "--time-limit"
  "10"
  "--log-stderr")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@150eab74"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@4d2dc60"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./target/debug/echo"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x44f433db"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@44f433db"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x38388639"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@38388639"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x5aeaee3"
                                                    "maelstrom.workload.echo$workload$fn__16882@5aeaee3"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x53a20aab"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x362d91ef"
         "maelstrom.net$jepsen_os$reify__15254@362d91ef"]
 :time-limit 10
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-08-01 18:49:17,843{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-08-01 18:49:17,844{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-08-01 18:49:17,845{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-08-01 18:49:17,846{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-08-01 18:49:17,848{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-08-01 18:49:17,849{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./target/debug/echo []
2024-08-01 18:49:17,870{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-08-01 18:49:17,878{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 92"
2024-08-01 18:49:17,884{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 92", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:17,987{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:echo	"Please echo 121"
2024-08-01 18:49:17,996{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 121", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:18,204{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:echo	"Please echo 22"
2024-08-01 18:49:18,213{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 22", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:18,224{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:echo	"Please echo 59"
2024-08-01 18:49:18,227{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 59", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:18,454{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:echo	"Please echo 46"
2024-08-01 18:49:18,462{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 46", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:18,650{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:echo	"Please echo 117"
2024-08-01 18:49:18,655{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 117", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:18,793{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:echo	"Please echo 121"
2024-08-01 18:49:18,799{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 121", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:19,102{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:echo	"Please echo 9"
2024-08-01 18:49:19,111{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 9", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:19,192{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:echo	"Please echo 38"
2024-08-01 18:49:19,199{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 38", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:19,547{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:echo	"Please echo 47"
2024-08-01 18:49:19,555{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 47", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:19,718{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:echo	"Please echo 107"
2024-08-01 18:49:19,721{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 107", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:19,890{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:echo	"Please echo 86"
2024-08-01 18:49:19,892{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 86", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:20,101{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:echo	"Please echo 111"
2024-08-01 18:49:20,108{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 111", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "echo_ok", :msg_id 1, :in_reply_to 1}

This is malformed because:

{:echo missing-required-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-08-01 18:49:20,476{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
